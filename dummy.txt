Util

package com.company.calculator;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.sql.Timestamp;
import java.util.HashMap;

import org.junit.jupiter.api.Test;

class UtilTest {

    @Test
    void testConvertToMap() {
        HashMap<String, Object> stringObjectMap = new HashMap<>();
        stringObjectMap.put("foo", "42");
        assertEquals(1, Util.convertToMap(stringObjectMap).size());
    }

    @Test
    void testConvertToMap_IsEmpty() {
        assertTrue(Util.convertToMap(new HashMap<>()).isEmpty());
    }

    @Test
    void testIsNullEmpty() {
        assertFalse(Util.isNullEmpty("Str"));
        assertTrue(Util.isNullEmpty(null));
        assertTrue(Util.isNullEmpty(""));
    }

    @Test
    void testSpecialTrim() {
        assertEquals("42", Util.specialTrim("42"));
        assertNull(Util.specialTrim(null));
        assertNull(Util.specialTrim(""));
    }

    @Test
    void testGetPreviousDate() {
        Timestamp timestamp = mock(Timestamp.class);
        when(timestamp.getTime()).thenReturn(10L);
        Util.getPreviousDate(timestamp);
        verify(timestamp).getTime();
    }

    @Test
    void testSqlDate_forNullValue() {
        assertNull(Util.sqlDate(null));
    }

    @Test
    void testSqlDate() {
        Timestamp timestamp = mock(Timestamp.class);
        when(timestamp.getTime()).thenReturn(10L);
        Util.sqlDate(timestamp);
        verify(timestamp).getTime();
    }

}


BulkCaptureController

package com.company.calculator;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

class BulkCaptureControllerTest {
 
    @Test
    void testCreatePEServiceRequest() {
        BulkCaptureController bulkCaptureController = new BulkCaptureController();
        QueryRequest qr = new QueryRequest();
        ActionResult actionResult = new ActionResult();
        BulkCaptureRequest actualCreatePEServiceRequestResult = bulkCaptureController.createPEServiceRequest(qr,
                actionResult);
        assertEquals(PEConstant.ADVISOR, actualCreatePEServiceRequestResult.getAdvisorId());
        assertTrue(actualCreatePEServiceRequestResult.isPreview());
        assertEquals("COMMITMENT", actualCreatePEServiceRequestResult.getGridName());
        assertEquals(PEConstant.FUND, actualCreatePEServiceRequestResult.getFundId());
        assertNull(actualCreatePEServiceRequestResult.getFileName());
        assertEquals(PEConstant.FILE_CONTENT, actualCreatePEServiceRequestResult.getFileContent());
        assertNull(actualCreatePEServiceRequestResult.getCapitalActivityType());
    }

}

