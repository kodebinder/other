package com.msdw.aps.msfspe.business.service.report;

import com.msdw.aps.msfspe.enums.NoticeReportType;
import com.msdw.aps.msfspe.exception.InternalErrorException;
import com.msdw.aps.msfspe.exception.NotFoundException;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

@ContextConfiguration(classes = {InkindDistributionReportDataServiceImpl.class})
@ExtendWith(SpringExtension.class)
class InkindDistributionReportDataServiceImplTest {
    @Autowired
    private InkindDistributionReportDataServiceImpl inkindDistributionReportDataServiceImpl;

    @Test
    void testGetData() {
        assertNull(inkindDistributionReportDataServiceImpl.getData("42", "42", "2020-03-01"));
        assertThrows(NotFoundException.class,
                () -> inkindDistributionReportDataServiceImpl.getData(new ArrayList<>(), "2020-03-01", "2020-03-01"));
    }

    @Test
    void testGetData2() {
        ArrayList<String> stringList = new ArrayList<>();
        stringList.add("Inkind distribution not found for startDate: %s, endDate: %s and fundIds: %s.");
        assertThrows(InternalErrorException.class,
                () -> inkindDistributionReportDataServiceImpl.getData(stringList, "2020-03-01", "2020-03-01"));
    }

    @Test
    void testGetData3() {
        ArrayList<String> stringList = new ArrayList<>();
        stringList.add("Inkind distribution not found for startDate: %s, endDate: %s and fundIds: %s.");
        assertThrows(NotFoundException.class,
                () -> inkindDistributionReportDataServiceImpl.getData(stringList, "", "2020-03-01"));
    }

    @Test
    void testGetData4() {
        ArrayList<String> stringList = new ArrayList<>();
        stringList.add("Inkind distribution not found for startDate: %s, endDate: %s and fundIds: %s.");
        assertThrows(InternalErrorException.class, () -> inkindDistributionReportDataServiceImpl.getData(stringList,
                "2020-03-01", "Shutting down the executor service."));
    }

    @Test
    void testGetData5() {
        ArrayList<String> stringList = new ArrayList<>();
        stringList.add("Inkind distribution not found for startDate: %s, endDate: %s and fundIds: %s.");
        assertThrows(NotFoundException.class,
                () -> inkindDistributionReportDataServiceImpl.getData(stringList, "2020-03-01", ""));
    }

    @Test
    void testGetNoticeReportType() {
        assertEquals(NoticeReportType.INKIND_DISTRIBUTION, inkindDistributionReportDataServiceImpl.getNoticeReportType());
    }

    @Test
    void testGetDirectOrderDocReportType() {
        assertNull(inkindDistributionReportDataServiceImpl.getDirectOrderDocReportType());
    }
}

